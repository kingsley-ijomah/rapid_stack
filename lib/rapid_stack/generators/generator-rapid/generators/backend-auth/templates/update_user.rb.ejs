# frozen_string_literal: true

module Mutations
  module <%= moduleName %>
    # Update user information mutation
    class <%= className %> < Mutations::BaseMutation
      # Define the input arguments for the mutation
<% fields.forEach(function(field) { -%>
      argument :<%= field.name %>, <%= field.type %>, required: true
<% }); -%>

      return_type Types::UserType
      require_permission :ensure_all_groups

      before_action :check_permission

      def resolve(<%= fields.map(function(field) { return field.name + ':' }).join(', ') %>)
        super
        user = context[:current_user]
        AuthService.new.update_user(user, { <%= fields.map(function(field) { return field.name + ': ' + field.name }).join(', ') %> })
      end
    end
  end
end 