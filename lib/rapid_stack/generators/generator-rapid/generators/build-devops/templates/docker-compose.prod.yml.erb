# This is the docker-compose file for the production environment

services:
  mongodb:
    image: mongo:7.0
    networks:
      - app-network
    command: ["--bind_ip_all"]
    volumes:
      - mongo_data_prod:/data/db
    environment:
      - MONGO_INITDB_DATABASE=${MONGODB_DATABASE}
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
    healthcheck:
      test: mongosh -u ${MONGO_USERNAME} -p ${MONGO_PASSWORD} --authenticationDatabase admin --eval 'db.runCommand("ping").ok' --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${DROPLET_IP}:12201"
        tag: "mongodb-service"
  backend:
    image: ${DOCKERHUB_USERNAME}/${APP_NAME}-backend:latest
    networks:
      - app-network
    ports:
      - "3000:3000"
    environment:
      - RAILS_ENV=production
      - RAILS_LOG_TO_STDOUT=true
      - RAILS_LOG_LEVEL=debug
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=${VAULT_TOKEN}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - RAILS_MASTER_KEY=${RAILS_MASTER_KEY}
      - POSTMARK_API_TOKEN=${POSTMARK_API_TOKEN}
      - APP_NAME=${APP_NAME}
      - APP_DOMAIN=${APP_DOMAIN}
      - APP_SUPPORT_EMAIL=${APP_SUPPORT_EMAIL}
      - MAILER_FROM_ADDRESS=${MAILER_FROM_ADDRESS}
      - MAILER_FROM_NAME=${MAILER_FROM_NAME}
      - MONGODB_HOST=${MONGODB_HOST}
      - MONGODB_DATABASE=${MONGODB_DATABASE}
      - MONGODB_USER=${MONGODB_USER}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${DROPLET_IP}:12201"
        tag: "backend-service"

  nginx:
    image: ${DOCKERHUB_USERNAME}/${APP_NAME}-nginx:latest
    environment:
      - DOMAINS=${DOMAINS}
      - APP_NAME=${APP_NAME}
      - FRONTEND_BUCKET_NAME=${FRONTEND_BUCKET_NAME}
      - SPACES_REGION=${SPACES_REGION}
    networks:
      - app-network
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: unless-stopped
    volumes:
      - nginx_logs:/var/log/nginx
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://${DROPLET_IP}:12201"
        tag: "nginx-service"

volumes:
  mongo_data_prod:
  nginx_logs:

networks:
  app-network:
    external: true