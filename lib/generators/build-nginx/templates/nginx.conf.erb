# map $http_host $domain {
#     "~^(?<subdomain>[^.]+\.)?(?<maindomain>.+)$" $maindomain;
# }

server {
    listen 80;
    server_name ${DOMAIN_LIST};

    # Add logging configuration
    access_log /var/log/nginx/${APP_NAME}.access.log combined;
    error_log /var/log/nginx/${APP_NAME}.error.log warn;

    # Basic security headers
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    # Health check endpoint
    location /health {
        proxy_pass http://backend:3000/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Don't cache health check responses
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires 0;
    }

    # Vault UI and API - must be before other location blocks
    location ^~ /vault {
        # Remove /vault prefix before proxying
        rewrite ^/vault/(.*) /$1 break;
        proxy_pass http://vault:8200;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Don't buffer these requests
        proxy_buffering off;

        # Handle trailing slash
        proxy_redirect / /vault/;

        # Allow Vault UI to load its assets
        location ^~ /vault/ui/ {
            rewrite ^/vault/(.*) /$1 break;
            proxy_pass http://vault:8200;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_buffering off;
        }

        # Handle Vault assets specifically
        location ~* ^/vault/.*\.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2)$ {
            rewrite ^/vault/(.*) /$1 break;
            proxy_pass http://vault:8200;
            proxy_set_header Host $host;
            proxy_buffering off;
            expires 1y;
            add_header Cache-Control public;
        }
    }

    # Handle JavaScript modules and assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2)$ {
        proxy_pass https://${FRONTEND_BUCKET_NAME}.${SPACES_REGION}.digitaloceanspaces.com/www/browser$uri;
        proxy_set_header Host ${FRONTEND_BUCKET_NAME}.${SPACES_REGION}.digitaloceanspaces.com;
        proxy_hide_header x-amz-id-2;
        proxy_hide_header x-amz-request-id;
        proxy_hide_header Set-Cookie;
        proxy_ignore_headers Set-Cookie;
        expires 1y;
        add_header Cache-Control public;
    }

    # Root location for index.html and SPA routing
    location / {
        proxy_pass https://${FRONTEND_BUCKET_NAME}.${SPACES_REGION}.digitaloceanspaces.com/www/browser/index.html;
        proxy_set_header Host ${FRONTEND_BUCKET_NAME}.${SPACES_REGION}.digitaloceanspaces.com;
        proxy_hide_header x-amz-id-2;
        proxy_hide_header x-amz-request-id;
        proxy_hide_header Set-Cookie;
        proxy_ignore_headers Set-Cookie;
    }

    # GraphQL API
    location /graphql {
        proxy_pass http://backend:3000/graphql;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}

# Subdomain handling
server {
    listen 80;
    server_name "~^(?<subdomain>[^.]+)\.(?<domain>${DOMAIN_LIST})$";

    # Add logging configuration
    access_log /var/log/nginx/${APP_NAME}-subdomain.access.log combined;
    error_log /var/log/nginx/${APP_NAME}-subdomain.error.log warn;

    # Basic security headers
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    # Handle JavaScript modules and assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2)$ {
        proxy_pass https://${FRONTEND_BUCKET_NAME}.${SPACES_REGION}.digitaloceanspaces.com/www$uri;
        proxy_set_header Host ${FRONTEND_BUCKET_NAME}.${SPACES_REGION}.digitaloceanspaces.com;
        proxy_hide_header x-amz-id-2;
        proxy_hide_header x-amz-request-id;
        proxy_hide_header Set-Cookie;
        proxy_ignore_headers Set-Cookie;
        expires 1y;
        add_header Cache-Control public;
    }

    # Root location for index.html and SPA routing
    location / {
        # try_files $uri $uri/ /index.html;
        proxy_pass https://${FRONTEND_BUCKET_NAME}.${SPACES_REGION}.digitaloceanspaces.com/www/index.html;
        proxy_set_header Host ${FRONTEND_BUCKET_NAME}.${SPACES_REGION}.digitaloceanspaces.com;
        proxy_set_header X-Company-Subdomain $subdomain;
        proxy_hide_header x-amz-id-2;
        proxy_hide_header x-amz-request-id;
        proxy_hide_header Set-Cookie;
        proxy_ignore_headers Set-Cookie;
    }

    # GraphQL API
    location /graphql {
        proxy_pass http://backend:3000/graphql;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Company-Subdomain $subdomain;
    }
}