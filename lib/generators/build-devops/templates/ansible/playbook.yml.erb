---
- hosts: swarm_managers
  become: yes
  vars:
    app_name: "{{ lookup('env', 'APP_NAME') | default(inventory_hostname_short) }}"
    dockerhub_username: "{{ lookup('env', 'DOCKERHUB_USERNAME') }}"
    dockerhub_password: "{{ lookup('env', 'DOCKERHUB_PASSWORD') }}"
    domains: "{{ lookup('env', 'DOMAINS') | default('localhost') | split(',') }}"

  tasks:
    - name: Update apt and install dependencies
      apt:
        name: "{{ packages }}"
        update_cache: yes
      vars:
        packages:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - git

    - name: Add Docker's official GPG key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Get Ubuntu codename
      command: lsb_release -cs
      register: ubuntu_codename

    - name: Add Docker repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ubuntu_codename.stdout }} stable"
        state: present

    - name: Install Docker CE
      apt:
        name: docker-ce
        update_cache: yes

    - name: Enable Docker service
      systemd:
        name: docker
        enabled: yes

    - name: Create deployuser
      ansible.builtin.user:
        name: deployuser
        shell: /bin/bash
        create_home: yes
        system: no

    - name: Ensure deployuser owns their home directory
      ansible.builtin.file:
        path: /home/deployuser
        state: directory
        owner: deployuser
        group: deployuser
        mode: '0755'
        recurse: yes  # This will fix permissions recursively

    - name: Add deployuser to sudo group
      ansible.builtin.user:
        name: deployuser
        groups: sudo
        append: yes

    - name: Add deployuser to docker group
      ansible.builtin.user:
        name: deployuser
        groups: docker
        append: yes

    - name: Install Docker Compose
      remote_user: ubuntu
      get_url: 
        url : "https://github.com/docker/compose/releases/download/v2.23.3/docker-compose-linux-x86_64"
        dest: /usr/local/bin/docker-compose
        mode: '0755'

    - name: Create .ssh directory for deployuser
      ansible.builtin.file:
        path: /home/deployuser/.ssh
        state: directory
        owner: deployuser
        group: deployuser
        mode: '0700'

    - name: Create empty .env file with proper permissions
      ansible.builtin.file:
        path: /home/deployuser/.env
        state: touch
        owner: deployuser
        group: deployuser
        mode: '0600'

    - name: Copy authorized_keys for deployuser on remote
      ansible.builtin.copy:
        src: /root/.ssh/authorized_keys
        dest: /home/deployuser/.ssh/authorized_keys
        owner: deployuser
        group: deployuser
        mode: '0600'
        remote_src: yes

    # DigitalOcean Monitoring Agent
    - name: Install DigitalOcean Monitoring Agent
      shell: "curl -sSL https://repos.insights.digitalocean.com/install.sh | sudo bash"

    - name: Create .vault directory for deployuser
      ansible.builtin.file:
        path: /home/deployuser/.vault
        state: directory
        owner: deployuser
        group: deployuser
        mode: '0700'

    - name: Copy vault secrets file
      ansible.builtin.copy:
        src: "{{ lookup('env', 'HOME') }}/.vault_secrets.vault"
        dest: /home/deployuser/.vault/vault_secrets.vault
        owner: deployuser
        group: deployuser
        mode: '0600'

    - name: Create Docker Nginx directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: deployuser
        group: deployuser
        mode: '0755'
      with_items:
        - /home/deployuser/infra/nginx/conf.d
        - /home/deployuser/infra/nginx/log
      become: yes

    - name: Copy Docker Nginx configuration
      ansible.builtin.template:
        src: templates/docker-nginx.conf.j2
        dest: /home/deployuser/infra/nginx/conf.d/default.conf
        owner: deployuser
        group: deployuser
        mode: '0644'
      become: yes

    # Open Firewall Ports for HTTP and HTTPS
    - name: Allow HTTP traffic
      community.general.ufw:
        rule: allow
        port: '80'
        proto: tcp
      tags:
        - firewall_allow

    - name: Allow HTTPS traffic
      community.general.ufw:
        rule: allow
        port: '443'
        proto: tcp

    - name: Install Python Docker package via apt
      ansible.builtin.apt:
        name: python3-docker
        state: present
        update_cache: yes
      become: yes
      tags:
        - python_docker
   
    - name: Install gettext-base for envsubst
      apt:
        name: gettext-base
        state: present
        update_cache: yes
      become: true