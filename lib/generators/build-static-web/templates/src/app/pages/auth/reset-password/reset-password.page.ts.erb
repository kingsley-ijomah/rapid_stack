import { Component, OnInit } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { RouterModule, Router, ActivatedRoute } from '@angular/router';
import { AuthService } from '../../../services/auth.service';

@Component({
  selector: 'app-reset-password',
  standalone: true,
  imports: [CommonModule, FormsModule, RouterModule],
  templateUrl: './reset-password.page.html',
  styleUrls: ['./reset-password.page.scss']
})
export class ResetPasswordPage implements OnInit {
  password: string = '';
  verifyPassword: string = '';
  email: string = '';
  errorMessage: string = '';
  successMessage: string = '';
  showRequestNewLink: boolean = false;

  constructor(
    private AuthService: AuthService,
    private router: Router,
    private route: ActivatedRoute
  ) {}

  ngOnInit() {
    console.log('ResetPasswordPage initialized');
    // Get the access token from the URL
    this.route.fragment.subscribe(fragment => {
      if (fragment) {
        const params = new URLSearchParams(fragment);
        const accessToken = params.get('access_token');
        const refreshToken = params.get('refresh_token');
        
        if (accessToken && refreshToken) {
          // Set the session
          this.AuthService.setSession(accessToken, refreshToken);
        } else {
          console.log('No tokens found in URL');
          this.errorMessage = 'Invalid or expired reset link. Please request a new password reset.';
          this.showRequestNewLink = true;
        }
      }
    });
  }

  async requestNewLink() {
    if (!this.email) {
      this.errorMessage = 'Please enter your email address';
      return;
    }

    try {
      const { error } = await this.AuthService.resetPassword(this.email);
      
      if (error) {
        this.errorMessage = error.message;
        this.successMessage = '';
        return;
      }

      this.successMessage = 'Check your email for the new reset link';
      this.errorMessage = '';
    } catch (error) {
      this.errorMessage = 'An unexpected error occurred. Please try again.';
      this.successMessage = '';
    }
  }

  async onSubmit() {
    if (this.password !== this.verifyPassword) {
      this.errorMessage = 'Passwords do not match';
      return;
    }

    try {
      const { error } = await this.AuthService.updatePassword(this.password);
      
      if (error) {
        this.errorMessage = error.message;
        this.successMessage = '';
        return;
      }

      this.successMessage = 'Password updated successfully';
      this.errorMessage = '';
      
      // Redirect to login after successful password reset
      setTimeout(() => {
        this.router.navigate(['/login']);
      }, 2000);
    } catch (error) {
      this.errorMessage = 'An unexpected error occurred. Please try again.';
      this.successMessage = '';
    }
  }
} 