name: Build and Push Docker Images

on:
  push:
    paths:
      - '**'
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Checkout private actions
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.MY_GITHUB_USERNAME }}/${{ secrets.APP_NAME }}-actions
          ref: main
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          path: .github/actions
          clean: true
          fetch-depth: 0

      - name: Get Vault Secrets
        id: vault
        uses: ./.github/actions/.github/actions/vault-secrets
        with:
          vault_addr: "http://${{ secrets.DROPLET_IP }}:8200"
          droplet_ip: ${{ secrets.DROPLET_IP }}
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ steps.vault.outputs.dockerhub_username }}
          password: ${{ steps.vault.outputs.dockerhub_password }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Run Tests
        run: npm test -- --watch=false --browsers=ChromeHeadless

      - name: Create directories
        run: |
          mkdir -p www/frontend
          mkdir -p nginx/html

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: image=moby/buildkit:latest

      - name: Build frontend
        uses: docker/build-push-action@v5
        with:
          context: .
          target: production
          load: true
          tags: ${{ steps.vault.outputs.app_name }}-frontend:latest
          cache-from: type=registry,ref=${{ steps.vault.outputs.dockerhub_username }}/${{ steps.vault.outputs.app_name }}-frontend:cache
          cache-to: type=registry,ref=${{ steps.vault.outputs.dockerhub_username }}/${{ steps.vault.outputs.app_name }}-frontend:cache,mode=max

      - name: Copy build artifacts
        run: |
          docker create --name frontend-container ${{ steps.vault.outputs.app_name }}-frontend:latest
          docker cp frontend-container:/app/www/frontend/. ./www/frontend/
          docker rm frontend-container

      - name: Upload to DigitalOcean Spaces
        env:
          AWS_ACCESS_KEY_ID: ${{ steps.vault.outputs.spaces_access_id }}
          AWS_SECRET_ACCESS_KEY: ${{ steps.vault.outputs.spaces_secret_key }}
          SPACES_REGION: ${{ steps.vault.outputs.region }}
        run: |
          aws s3 sync www/frontend/ s3://${{ steps.vault.outputs.frontend_bucket_name }}/www \
            --endpoint-url https://${{ steps.vault.outputs.spaces_region }}.digitaloceanspaces.com \
            --acl public-read

      - name: Trigger Deploy workflow in DevOps
        if: success()
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.REPO_ACCESS_TOKEN }}" \
            https://api.github.com/repos/${{ secrets.MY_GITHUB_USERNAME }}/${{ steps.vault.outputs.app_name }}-devops/dispatches \
            -d '{"event_type": "frontend-updated", "client_payload": {"customData": "value"}}' 